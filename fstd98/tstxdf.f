*/* RMNLIB - Library of useful routines for C and FORTRAN programming
* * Copyright (C) 1975-2001  Division de Recherche en Prevision Numerique
* *                          Environnement Canada
* *
* * This library is free software; you can redistribute it and/or
* * modify it under the terms of the GNU Lesser General Public
* * License as published by the Free Software Foundation,
* * version 2.1 of the License.
* *
* * This library is distributed in the hope that it will be useful,
* * but WITHOUT ANY WARRANTY; without even the implied warranty of
* * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* * Lesser General Public License for more details.
* *
* * You should have received a copy of the GNU Lesser General Public
* * License along with this library; if not, write to the
* * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* * Boston, MA 02111-1307, USA.
* */
***PROGRAM TESTXDF
*
      PROGRAM TESTXDF
      IMPLICIT NONE

*
*AUTEURS     M. LEPINE & J. CAVEEN  -  SEPTEMBRE 1990
*
*OBJET(TESTXDF)
*     PROGRAMME POUR TESTER LES DIFFERENTS MODULES DU PROGICIEL
*     XDF
*
*MODULES
      INTEGER FNOM,XDFOPN,XDFPUT,XDFLOC,XDFGET,XDFINI,XDFCLS
      INTEGER HRJUST,XDFCLE,XDFADD,XDFXTR,XDFINS,XDFCUT,XDFUSE,
     %XDFIMP
      INTEGER XDFUPD,XDFPRM,XDFHDR,XDFDEL,XDFSTA,XDFREP,XDFOPT,
     %XDFGOP
      INTEGER QDFMSIG
      EXTERNAL XDFUPD,XDFPRM,XDFHDR,XDFDEL,XDFSTA,XDFREP,XDFOPT,
     %XDFGOP
      EXTERNAL FNOM,XDFOPN,XDFPUT,XDFLOC,XDFGET,XDFINI,XDFCLS
      EXTERNAL HRJUST,XDFCLE,XDFADD,XDFXTR,XDFINS,XDFCUT,CCARD
      EXTERNAL XDFUSE,XDFIMP
      EXTERNAL QDFMSIG
      EXTERNAL TESTIT
      integer fclos,xdflnk
      external fclos,xdflnk
**

      INTEGER IER, IPOS, BUF(500), DONNEES(100), TEMPO(100),BUF2(500
     %)
      INTEGER PRI(2,6),NPRI,AUX(2,5),NAUX,IDTYP,ADDR,LNG,I,IIER,J
      INTEGER PRI2(2,6),NPRI2,AUX2(2,5),NAUX2
      INTEGER KEYS(6),INFO(5),CHERCH(6),lstlink(2)
      INTEGER HANDLE,IR,STAT(12),NSTAT,Hndl
      CHARACTER *4 CVERS,CAPPLC
      CHARACTER*8 LISTE(3),DEF1(3),DEF2(3)
      CHARACTER*10 USROP
      CHARACTER*4 CARCLE
      DATA LISTE /'L',   'IMFICH1','IMFICH2'/
      DATA DEF1  /'OUTPUT','TAPE1',  'TAPE2'  /
      DATA DEF2  /'OUTPUT','TAPE1',  'TAPE2'  /
*

      IPOS = -1
      CALL CCARD(LISTE,DEF1,DEF2,3,IPOS)
      IER = FNOM(6,DEF2(1),'SEQ+FTN+FMT',0)
      IER = FNOM(10,DEF2(2),'RND',0)
      IER = FNOM(20,DEF2(3),'RND',0)
      IER = FNOM(30,'TAPE3','RND',0)
      BUF(1) = 500
      NPRI = 6
      NAUX = 5
      NSTAT = 12
      NPRI2 = 6
      NAUX2 = 5
      IDTYP = 22
      IER=XDFOPT('ERRTOLR','SYSTEM',-1)
      IER = XDFCLE('Pri1',07,08,00,PRI(1,1),PRI(2,1))
      IER = XDFCLE('Pri2',23,16,34,PRI(1,2),PRI(2,2))
      IER = XDFCLE('Pri3',31,08,01,PRI(1,3),PRI(2,3))
      IER = XDFCLE('Pri4',47,16,02,PRI(1,4),PRI(2,4))
      IER = XDFCLE('Pri5',63,16,02,PRI(1,5),PRI(2,5))
      IER = XDFCLE('Pri6',95,32,00,PRI(1,6),PRI(2,6))
      IER = XDFCLE('Aux1',23,24,03,AUX(1,1),AUX(2,1))
      IER = XDFCLE('Aux2',31,08,01,AUX(1,2),AUX(2,2))
      IER = XDFCLE('Aux3',63,32,04,AUX(1,3),AUX(2,3))
      IER = XDFCLE('Aux4',79,16,02,AUX(1,4),AUX(2,4))
      IER = XDFCLE('Aux5',95,16,02,AUX(1,5),AUX(2,5))
      WRITE(6,333) 1.0,'XDFOPN MODE CREATE'
      IER = XDFOPN(10,'CREATE',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,3333) IER
      CALL TESTIT(IER)
      IER = XDFOPN(20,'CREATE',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,3333) IER
      CALL TESTIT(IER)
      WRITE(6,333) 2.0,'XDFINI'
      KEYS(1) = 199
      CARCLE = 'AA  '
      READ(CARCLE,'(A2)') KEYS(2)
      CARCLE = 'B   '
      READ(CARCLE,'(A1)') KEYS(3)
      CARCLE = 'CC  '
      READ(CARCLE,'(A2)') KEYS(4)
      CARCLE = 'DD  '
      READ(CARCLE,'(A2)') KEYS(5)
      KEYS(6) = 1
      KEYS(2) = HRJUST(KEYS(2),2)
      KEYS(3) = HRJUST(KEYS(3),1)
      KEYS(4) = HRJUST(KEYS(4),2)
      KEYS(5) = HRJUST(KEYS(5),2)
      CARCLE = 'EEE '
      READ(CARCLE,'(A3)') INFO(1)
      CARCLE = 'F   '
      READ(CARCLE,'(A1)') INFO(2)
      CARCLE = 'GGGG'
      READ(CARCLE,'(A4)') INFO(3)
      CARCLE =  'HH  '
      READ(CARCLE,'(A2)') INFO(4)
      CARCLE = 'ZZ  '
      READ(CARCLE,'(A2)') INFO(5)
      INFO(1) = HRJUST(INFO(1),3)
      INFO(2) = HRJUST(INFO(2),1)
      INFO(3) = HRJUST(INFO(3),4)
      INFO(4) = HRJUST(INFO(4),2)
      INFO(5) = HRJUST(INFO(5),2)
      IER = XDFINI(10,BUF,IDTYP,KEYS,NPRI,INFO,NAUX)
      CALL TESTIT(IER)
      DO 23000 I = 1,100
         DONNEES(I) = I
23000 CONTINUE 
      WRITE(6,333) 3.0,'XDFADD'
c      print *,'Debug avant'
c      write(6,777) (buf(i),i=1,30)
      IER = XDFADD(BUF,DONNEES,100,32,2)
c      print *,'Debug apres'
c      write(6,777) (buf(i),i=1,30)
 777  format(5(2x,z8.8))
c      stop
      IER = XDFADD(BUF,DONNEES,50,32,2)
      IER = XDFADD(BUF,DONNEES,100,32,2)
      CALL TESTIT(IER)
      WRITE(6,333) 3.1,'XDFXTR'
      IER = XDFXTR(BUF,TEMPO,150*32,100,32,2)
      IIER = IER
      DO 23002 I = 1,100
         IF( (TEMPO(I) .NE. DONNEES(I)))THEN
            IIER = IIER - 1
         ENDIF 
23002 CONTINUE 
      CALL TESTIT(IIER)
      DO 23006 I= 1,500
         BUF2(I) = BUF(I)
23006 CONTINUE 
      WRITE(6,333) 3.2,'XDFCUT'
      WRITE(6,333) 3.3,'XDFINS'
      IER = XDFCUT(BUF,150*32,100,32,2)
      CALL TESTIT(IER)
      IER = XDFINS(BUF,TEMPO,150*32,100,32,2)
      IIER = IER
      DO 23008 I = 1,500
         IF((BUF(I).NE. BUF2(I)))THEN
            IIER = IIER - 1
         ENDIF 
23008 CONTINUE 
      CALL TESTIT(IIER)
      WRITE(6,333) 4.0,'XDFPUT PREMIER ENREGISTREMENT'
      IER = XDFPUT(10,0,BUF)
      CALL TESTIT(IER)
      WRITE(6,333) 5.0,'XDFLOC PREMIER ENREGISTREMENT'
      HANDLE=XDFLOC(10,0,KEYS,NPRI)
      CALL TESTIT(HANDLE)
      WRITE(6,333) 6.0,'XDFGET'
      DO 23012 I=2,500
         BUF(I)=0
23012 CONTINUE 
      IER=XDFGET(HANDLE,BUF)
      IIER=IER
      DO 23014 I=12,267
         IF((BUF(I).NE. BUF2(I)))THEN
            IIER=IIER -1
         ENDIF 
23014 CONTINUE 
      CALL TESTIT(IIER)
      WRITE(6,333) 7.0,'XDFUPD MODIF DE KEYS(1)'
      KEYS(1) = 0
      IER=XDFUPD(10,BUF,-1,KEYS,NPRI,INFO,0)
      CALL TESTIT(IER)
      WRITE(6,333) 8.0,'XDFPUT REMPLACE PREMIER ENREGISTREMENT'
      IER=XDFPUT(10,HANDLE,BUF)
      CALL TESTIT(IER)
*     ECRIRE 255 ENREGISTREMENTS APRES CELUI-CI

      WRITE(6,333) 8.1,'ECRIRE 255 ENRG A LA SUITE'
      WRITE(6,333) 8.1,'KEYS(1)=1 @ 255'
      IER = 0
      IIER = 0
      DO 23018 I=1,255
         KEYS(1) = I
         NAUX = 0
         IR=XDFUPD(10,BUF,-1,KEYS,NPRI,INFO,NAUX)
         IER=IER + IR
         HANDLE = 0
         IR= XDFPUT(10,0,BUF)
         IIER=IIER + IR
23018 CONTINUE 
      CALL TESTIT(IER)
      CALL TESTIT(IIER)
      WRITE(6,333) 9.0,'XDFCLS'
      IER = XDFCLS(10)
      CALL TESTIT(IER)
      WRITE(6,333) 10.0,'XDFOPN MODE LECTURE'
      IER = XDFOPN(10,'READ',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,3333) IER
      CALL TESTIT(IER)
      WRITE(6,333) 11.0,'XDFLOC KEYS(1) = 159'
      KEYS(1) = 159
      HANDLE=XDFLOC(10,HANDLE,KEYS,NPRI)
      WRITE(6,*)' HANDLE = ',HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333) 11.1,'XDFGET'
      DO 23020 I=2,500
         BUF(I)=0
23020 CONTINUE 
      IER=XDFGET(HANDLE,BUF)
      IIER=IER
      DO 23022 I=18,267
         IF((BUF(I).NE. BUF2(I)))THEN
            IIER=IIER -1
         ENDIF 
23022 CONTINUE 
      CALL TESTIT(IIER)
      WRITE(6,333) 11.2,'XDFPRM'
      DO 23026 I=1,NPRI
         KEYS(I) = 0
23026 CONTINUE 
      IER=XDFPRM(HANDLE,ADDR,LNG,IDTYP,KEYS,NPRI)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      CALL TESTIT(IER)
      WRITE(6,333) 11.3,'XDFPUT SUR LECTURE SEULEMENT'
      IER = XDFPUT(10,0,BUF)
      IF( (IER.EQ. -7))THEN
         IER=7
      ENDIF 
      CALL TESTIT(IER)
      WRITE(6,333) 11.4,'XDFDEL SUR LECTURE SEULEMENT'
      IER = XDFDEL(HANDLE)
      IF(( IER.EQ. -22))THEN
         IER = 22
      ENDIF 
      CALL TESTIT(IER)
      WRITE(6,333) 12.0,'XDFCLS'
      IER = XDFCLS(10)
      CALL TESTIT(IER)
      ier = fclos(10)
      ier = fnom(10,DEF2(2),'RND',0)
      WRITE(6,333) 13.0,'XDFOPN MODE LECTURE-ECRITURE'
      IER = XDFOPN(10,'R-W',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,3333) IER
      CALL TESTIT(IER)
*     ECRIRE 240 ENREGISTREMENTS A LA SUITE

      IER=XDFSTA(10,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
      IER=XDFIMP(10,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)

      WRITE(6,333) 14.0,'ECRITURE DE 240 ENREGISTREMENTS'
      WRITE(6,333) 14.0,'UPDPUT KEYS(1)=1 @ 240'
      IER = 0
      IIER = 0
      DO 23032 I=1,240
         KEYS(1) = I
         NAUX = 0
         IR=XDFUPD(10,BUF,-1,KEYS,NPRI,INFO,NAUX)
         IER=IER + IR
         IR= XDFPUT(10,0,BUF)
         IIER=IIER + IR
23032 CONTINUE 
      CALL TESTIT(IER)
      CALL TESTIT(IIER)

      WRITE(6,333) 15.0,'XDFLOC KEYS(1)=159 KEYS(2)= aa'
      CHERCH(1) = 159
      CARCLE = 'aa   '
      READ(CARCLE,'(A2)') CHERCH(2)
      CHERCH(3)=KEYS(3)
      CHERCH(4)=KEYS(4)
      CHERCH(5)=KEYS(5)
      CHERCH(6)=KEYS(6)
      CHERCH(2) = HRJUST(CHERCH(2),2)
      HANDLE=XDFLOC(10,0,CHERCH,NPRI)
      WRITE(6,*)' HANDLE = ',HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333) 15.1,'XDFPRM'
      IER=XDFPRM(HANDLE,ADDR,LNG,IDTYP,KEYS,NPRI)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      CALL TESTIT(IER)
      DO 23034 I=2,500
         BUF(I)=0
23034 CONTINUE 
      WRITE(6,333) 15.2,'XDFGET'
      IER=XDFGET(HANDLE,BUF)
      WRITE(6,333) 15.3,'XDFHDR'
      NAUX = 5
      IER=XDFHDR(BUF,ADDR,LNG,IDTYP,KEYS,NPRI,INFO,NAUX)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      WRITE(6,*)' INFO'
      WRITE(6,*)(INFO(I),I=1,NAUX)
      CALL TESTIT(IER)
      WRITE(6,333) 15.4,'TROUVE PROCHAIN KEYS(1)=159 KEYS(2)=AA'
      CHERCH(1) = 159
      CARCLE = 'AA  '
      READ(CARCLE,'(A2)')CHERCH(2)
      CHERCH(2) = HRJUST(CHERCH(2),2)
      HANDLE=XDFLOC(10,HANDLE,CHERCH,NPRI)
      WRITE(6,*)' HANDLE = ',HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333) 15.5,'XDFPRM'
      IER=XDFPRM(HANDLE,ADDR,LNG,IDTYP,KEYS,NPRI)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      CALL TESTIT(IER)
      DO 23036 I=2,500
         BUF2(I)=0
23036 CONTINUE 
      WRITE(6,333) 15.6,'XDFGET'
      IER=XDFGET(HANDLE,BUF2)
      WRITE(6,333) 15.7,'XDFHDR'
      IER=XDFHDR(BUF2,ADDR,LNG,IDTYP,KEYS,NPRI,INFO,NAUX)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      WRITE(6,*)' INFO'
      WRITE(6,*)(INFO(I),I=1,NAUX)
      CALL TESTIT(IER)
      DO 23038 I=12,267
         IF((BUF(I).NE. BUF2(I)))THEN
            IER=IER -1
         ENDIF 
23038 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333) 15.8,'XDFLOC KEYS(3)= Z EXISTE PAS'
      CARCLE = 'Z   '
      READ(CARCLE,'(A1)') CHERCH(3)
      CHERCH(3)=HRJUST(CHERCH(3),1)
      IER=XDFLOC(10,0,CHERCH,NPRI)
      IF((IER.EQ. -12))THEN
         IER = 12
         WRITE(6,*)' PAS TROUVE L''ENREGISTREMENT'
         CALL TESTIT(IER)
      ELSE 
         CALL TESTIT(-1)
      ENDIF 
      WRITE(6,333) 16.0,'XDFDEL DERNIER TROUVE'
      WRITE(6,*)' HANDLE= ',HANDLE
      IER=XDFDEL(HANDLE)
      CALL TESTIT(IER)
      WRITE(6,333) 17.0,'XDFSTA FICHIER OUVERT'
      IER=XDFSTA(10,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
      IER=XDFIMP(10,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)
      CALL TESTIT(IER)
      WRITE(6,*)' STATISTIQUES'
      WRITE(6,*)
     %'   FSIZ  NRWR NXTN   NDB   PLST   NBIG   NPRM   LPRM'//
     %   '   NAUX   LAUX   NEFF   NREC'
      WRITE(6,*)(STAT(I),I=1,NSTAT)
      WRITE(6,444)'VRSN',CVERS
      WRITE(6,444)'SIGN',CAPPLC
      WRITE(6,*)' DEFINITION DES CLEFS PRIMAIRES'
      DO 23044 J=1,NPRI2
         WRITE(6,*)(PRI(I,J),I=1,2)
23044 CONTINUE 
      WRITE(6,*)' DEFINITION DES CLEFS AUXILIAIRES'
      DO 23046 J=1,NAUX2
         WRITE(6,*)(AUX(I,J),I=1,2)
23046 CONTINUE 
      IER = 0
      DO 23048 J=1,NPRI
         DO 23050 I=1,2
            IF((PRI(I,J).NE. PRI2(I,J)))THEN
               IER = IER -1
            ENDIF 
23050    CONTINUE 
23048 CONTINUE 
      CALL TESTIT(IER)
      DO 23054 J=1,NAUX
         DO 23056 I=1,2
            IF((AUX(I,J).NE. AUX2(I,J)))THEN
               IER = IER -1
            ENDIF 
23056    CONTINUE 
23054 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333) 18.0,'XDFREP'
      DO 23060 I=1,100
         DONNEES(I)=101-I
23060 CONTINUE 
      IER=XDFREP(BUF,DONNEES,100*32,100,32,2)
      IER=XDFXTR(BUF,TEMPO,100*32,100,32,2)
      DO 23062 I=1,100
         IF((TEMPO(I).NE.DONNEES(I)))THEN
            IER=IER-1
         ENDIF 
23062 CONTINUE 
      CALL TESTIT(IER)
*     EFFACER LES 10 DERNIERS ENREGISTREMENTS
      WRITE(6,333) 19.0,'XDFDEL 10 DERNIERS ENRGS'
      IIER=0
      DO 23066 I=231,240
         KEYS(1)=I
         HANDLE=XDFLOC(10,0,KEYS,NPRI)
         HANDLE=XDFLOC(10,HANDLE,KEYS,NPRI)
         WRITE(6,*)' HANDLE= ',HANDLE
         IER=XDFDEL(HANDLE)
         IIER=IIER+IER
23066 CONTINUE 
      HANDLE=0
*     ECRIRE ENREGISTREMENTS SUPPLEMENTAIRES POUR OUVRIR UNE NOUVELLE PAGE
*     ON MODIFIE KEYS(6)

c      ier = xdfcls(10)
c      write(6,*) 'Debug xdfcls xdfopn(10) + stats'
c      IER = XDFOPN(10,'R-W',PRI,NPRI,AUX,NAUX,'TEST')
c      IER=XDFSTA(10,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
c      IER=XDFIMP(10,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)

      NPRI = 6
      NAUX = 5
      WRITE(6,333) 20.0,'XDFPUT 150 ENREGISTREMENTS'
      WRITE(6,333) 20.0,'XDFUPD KEYS(6)=1,150'
      IIER = 0
      DO 23068 I=1,150
         KEYS(6) = I
         IR=XDFUPD(10,BUF,-1,KEYS,NPRI,INFO,NAUX)
         IER=XDFPUT(10,0,BUF)
         IIER=IR + IER
23068 CONTINUE 
      CALL TESTIT(IIER)

      WRITE(6,333) 21.0,'XDFLOC KEYS(6)=142'
      KEYS(6) = 142
      HANDLE=XDFLOC(10,0,KEYS,NPRI)
      WRITE(6,*)' HANDLE= ',HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333) 21.1,'XDFPRM'
      IER=XDFPRM(HANDLE,ADDR,LNG,IDTYP,KEYS,NPRI)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      WRITE(6,333) 21.2,'XDFLOC KEYS(1-5)=-1,KEYS(6)=142'
      DO 23070 I=1,5
         CHERCH(I) = -1
23070 CONTINUE 
      CHERCH(6) = 142
      HANDLE=XDFLOC(10,0,CHERCH,NPRI)
      WRITE(6,*)' HANDLE= ',HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333) 21.3,'XDFPRM'
      IER=XDFPRM(HANDLE,ADDR,LNG,IDTYP,KEYS,NPRI)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)

      WRITE(6,333) 21.4,'XDFLOC KEYS(1-6)=-1 suivant'
      cherch(6) = -1
      HANDLE=XDFLOC(10,-1,CHERCH,NPRI)
      WRITE(6,*)' HANDLE= ',HANDLE
      CALL TESTIT(HANDLE)

      NPRI = 6
      NAUX = 5
      WRITE(6,333) 22.0,'XDFPUT 350 ENREGISTREMENTS FIC 20'
      WRITE(6,333) 22.0,'XDFUPD KEYS(6)=1,350'
      IIER = 0
      DO 23072 I=1,350
         KEYS(6) = I
         IR=XDFUPD(20,BUF,-1,KEYS,NPRI,INFO,NAUX)
         IER=XDFPUT(20,0,BUF)
         IIER=IR + IER
23072 CONTINUE 
      CALL TESTIT(IIER)
      WRITE(6,333) 23.0,'XDFLOC  FIC20 KEYS(6)=142'
      KEYS(6) = 142
      HANDLE=XDFLOC(20,0,KEYS,NPRI)
      WRITE(6,*)' HANDLE= ',HANDLE
      CALL TESTIT(HANDLE)
      DO 23074 I=2,500
         BUF2(I)=0
23074 CONTINUE 
      WRITE(6,333) 23.1,'XDFGET'
      IER=XDFGET(HANDLE,BUF2)
      WRITE(6,333) 23.2,'XDFHDR'
      IER=XDFHDR(BUF2,ADDR,LNG,IDTYP,KEYS,NPRI,INFO,NAUX)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      WRITE(6,*)' INFO'
      WRITE(6,*)(INFO(I),I=1,NAUX)

      DO 23076 I=18,267
         IF((BUF(I).NE. BUF2(I)))THEN
            IER=IER -1
         ENDIF 
*     REECRIRE L'ENREGISTREMENT LU A LA FIN
23076 CONTINUE 
      CALL TESTIT(IER)

c      goto 92001
      WRITE(6,333) 23.3,'XDFOPN FICHIER 30 AVANT LINK'
      IER = XDFOPN(30,'R/O',PRI,NPRI,AUX,NAUX,'LINK')
      call testit(ier)
      WRITE(6,333) 23.4,'XDFLNK  FICHIER 20 et 30'
      lstlink(1) = 20
      lstlink(2) = 30
      ier = xdflnk(lstlink,2)
      call testit(ier)
      WRITE(6,333) 23.5,'XDFLOC  FIC20 KEYS(6)=142 (Test du link)'
      Hndl=XDFLOC(20,handle,KEYS,NPRI)
      WRITE(6,*)' HANDLE= ',Hndl
      CALL TESTIT(Hndl)

      WRITE(6,333) 23.6,'XDFGET (test du link)'
      IER=XDFGET(Hndl,BUF2)
      WRITE(6,333) 23.7,'XDFHDR (test du link)'
      IER=XDFHDR(BUF2,ADDR,LNG,IDTYP,KEYS,NPRI,INFO,NAUX)
      WRITE(6,*)'        ADDR         LNG         IDTYP'
      WRITE(6,*) ADDR,LNG,IDTYP
      WRITE(6,*)' KEYS'
      WRITE(6,*)(KEYS(I),I=1,NPRI)
      WRITE(6,*)' INFO'
      WRITE(6,*)(INFO(I),I=1,NAUX)

      DO 92000 I=18,267
         IF((BUF(I).NE. BUF2(I)))THEN
            IER=IER -1
         ENDIF 
*     REECRIRE L'ENREGISTREMENT LU A LA FIN
92000 CONTINUE 
      CALL TESTIT(IER)

92001 CONTINUE 
      WRITE(6,333) 24.0,'XDFPUT AVEC HANDLE NEGATIF'
      IER = XDFPUT(20,-HANDLE,BUF2)
      CALL TESTIT(IER)
      WRITE(6,333) 25.0,'XDFCLS FICHIER 20 AVANT FUSION'
      IER = XDFCLS(20)
      WRITE(6,333) 25.1,'XDFOPN FICHIER 20 AVANT FUSION'
      IER = XDFOPN(20,'R-W',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,333) 25.1,'XDFUSE FICHIER 20 A FICHIER 10'
      IER = XDFUSE(20,10)
      WRITE(6,333) 50.0,'XDFCLS FIC 10'
      IER = XDFCLS(10)
      CALL TESTIT(IER)
      WRITE(6,333) 50.1,'XDFCLS FIC 20'
      IER = XDFCLS(20)
      CALL TESTIT(IER)
      WRITE(6,333) 51.0,'XDFSTA FICHIER 10 FERME'
      IER=XDFSTA(10,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
      IER=XDFIMP(10,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)
      CALL TESTIT(IER)
      WRITE(6,*)' STATISTIQUES'
      WRITE(6,*)
     %'   FSIZ  NRWR NXTN   NDB   PLST   NBIG   NPRM   LPRM'//
     %   '   NAUX   LAUX   NEFF   NREC'
      WRITE(6,*)(STAT(I),I=1,NSTAT)
      WRITE(6,444)'VRSN',CVERS
      WRITE(6,444)'SIGN',CAPPLC
      WRITE(6,*)' DEFINITION DES CLEFS PRIMAIRES'
      DO 23080 J=1,NPRI2
         WRITE(6,*)(PRI(I,J),I=1,2)
23080 CONTINUE 
      WRITE(6,*)' DEFINITION DES CLEFS AUXILIAIRES'
      DO 23082 J=1,NAUX2
         WRITE(6,*)(AUX(I,J),I=1,2)
23082 CONTINUE 
      IER = 0
      DO 23084 J=1,NPRI
         DO 23086 I=1,2
            IF((PRI(I,J).NE. PRI2(I,J)))THEN
               IER = IER -1
            ENDIF 
23086    CONTINUE 
23084 CONTINUE 
      CALL TESTIT(IER)
      DO 23090 J=1,NAUX
         DO 23092 I=1,2
            IF((AUX(I,J).NE. AUX2(I,J)))THEN
               IER = IER -1
            ENDIF 
23092    CONTINUE 
23090 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333) 51.1,'XDFSTA FICHIER 20 FERME'
      IER=XDFSTA(20,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
      IER=XDFIMP(20,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)
      CALL TESTIT(IER)
      WRITE(6,*)' STATISTIQUES'
      WRITE(6,*)
     %'   FSIZ  NRWR NXTN   NDB   PLST   NBIG   NPRM   LPRM'//
     %   '   NAUX   LAUX   NEFF   NREC'
      WRITE(6,*)(STAT(I),I=1,NSTAT)
      WRITE(6,444)'VRSN',CVERS
      WRITE(6,444)'SIGN',CAPPLC
      WRITE(6,*)' DEFINITION DES CLEFS PRIMAIRES'
      DO 23096 J=1,NPRI2
         WRITE(6,*)(PRI(I,J),I=1,2)
23096 CONTINUE 
      WRITE(6,*)' DEFINITION DES CLEFS AUXILIAIRES'
      DO 23098 J=1,NAUX2
         WRITE(6,*)(AUX(I,J),I=1,2)
23098 CONTINUE 
      IER = 0
      DO 23100 J=1,NPRI
         DO 23102 I=1,2
            IF((PRI(I,J).NE. PRI2(I,J)))THEN
               IER = IER -1
            ENDIF 
23102    CONTINUE 
23100 CONTINUE 
      CALL TESTIT(IER)
      DO 23106 J=1,NAUX
         DO 23108 I=1,2
            IF((AUX(I,J).NE. AUX2(I,J)))THEN
               IER = IER -1
            ENDIF 
23108    CONTINUE 
23106 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333) 52.0,'XDFINS CHAINE DE CARACTERES DATYP = 3'
      DO 23112 I = 1,4
         CARCLE='MOTS'
23112 CONTINUE 
      DO 23114 I =1,4
         READ(CARCLE,'(A4)')DONNEES(I)
23114 CONTINUE 
      IER = XDFINS(BUF,DONNEES,64,16,8,3)
      IER = XDFXTR(BUF,TEMPO,64,16,8,3)
      DO 23116 I = 1,4
         WRITE(6,*)'DONNEES TEMPO',DONNEES(I),TEMPO(I)
         IF((DONNEES(I).NE. TEMPO(I)))THEN
            IER = IER-1
         ENDIF 
23116 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333) 52.1,'XDFINS CARACTERES DATYP = 5'
      DO 23120 I = 1,4
         CARCLE='mots'
23120 CONTINUE 
      DO 23122 I =1,4
         READ(CARCLE,'(A4)')DONNEES(I)
23122 CONTINUE 
      IER = XDFINS(BUF,DONNEES,64,16,8,3)
      IER = XDFXTR(BUF,TEMPO,64,16,8,3)
      DO 23124 I = 1,4
         WRITE(6,*)'DONNEES TEMPO',DONNEES(I),TEMPO(I)
         IF((DONNEES(I).NE. TEMPO(I)))THEN
            IER = IER-1
         ENDIF 
23124 CONTINUE 
      CALL TESTIT(IER)
      WRITE(6,333)52.2,'XDFADD CARACTERE DATYP = 3'
      DO 23128 I=2,500
         BUF(I) = 0
23128 CONTINUE 
      IER = XDFOPN(10,'READ',PRI,NPRI,AUX,NAUX,'TEST')
      IER = XDFINI(10,BUF,IDTYP,KEYS,NPRI,INFO,NAUX)
      IER = XDFADD(BUF,TEMPO,16,8,3)
      IER = XDFXTR(BUF,DONNEES,0,16,8,3)
      DO 23130 I = 1,4
         WRITE(6,*)'DONNEES TEMPO',DONNEES(I),TEMPO(I)
         IF((DONNEES(I).NE. TEMPO(I)))THEN
            IER = IER-1
         ENDIF 
23130 CONTINUE 
      CALL TESTIT(IER)
      IER =  XDFCLS(10)
      ier = fclos(10)
      ier = fnom(10,DEF2(2),'RND',0)
*     TESTER QUELQUE UN DES CODES D'ERREURS

      IER=XDFOPT('ERRTOLR','SYSTEM',-1)
      IER=XDFOPT('MSGLVL','SYSTEM',-1)
*

      WRITE(6,*)' TEST DES CODES D''ERREUR AVEC MSGLVL A SYSTEM'
      WRITE(6,333)53.0,'XDFCLS D''UN FICHIER FERME'
      IER  = XDFCLS(10)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      WRITE(6,333)53.1,'XDFLOC FICHIER 10 '
      KEYS(6) = 142
      HANDLE=XDFLOC(20,0,KEYS,NPRI)
      WRITE(6,*)' HANDLE = ',HANDLE
      HANDLE = -HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333)53.2,' XDFOPT OPTION INEXISTANTE'
      IER=XDFOPT('ERTOLR','SYSTEM',-1)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      WRITE(6,333)53.3,' XDFOPT VALEUR D''OPTION INEXISTANTE'
      IER=XDFOPT('ERRTOLR','BIDON',-1)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      IER=XDFOPT('ERRTOLR','SYSTEM',-1)
      IER=XDFOPT('MSGLVL','TRIVIAL',-1)
      WRITE(6,*)
     %' TEST DES MEMES CODES D''ERREUR AVEC MSGLVL A TRIVIAL'
      WRITE(6,333)54.0,'XDFCLS D''UN FICHIER FERME'
      IER  = XDFCLS(10)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      WRITE(6,333)54.1,'XDFLOC FICHIER 10 '
      KEYS(6) = 142
      HANDLE=XDFLOC(20,0,KEYS,NPRI)
      WRITE(6,*)' HANDLE = ',HANDLE
      HANDLE = -HANDLE
      CALL TESTIT(HANDLE)
      WRITE(6,333)54.2,' XDFOPT OPTION INEXISTANTE'
      IER=XDFOPT('ERTOLR','SYSTEM',-1)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      WRITE(6,333)54.3,' XDFOPT VALEUR D''OPTION INEXISTANTE'
      IER=XDFOPT('ERRTOLR','BIDON',-1)
      WRITE(6,*)' IER = ',IER
      IER = -IER
      CALL TESTIT(IER)
      WRITE(6,333) 55.0,' XDFGOP DE ERRTOLR'
      IER = XDFGOP('ERRTOLR',USROP,IIER)
      WRITE(6,*)' ERRTOLR = ',USROP
      CALL TESTIT(IER)
      WRITE(6,333) 55.1,' XDFGOP DE MSGLVL'
      IER = XDFGOP('MSGLVL',USROP,IIER)
      WRITE(6,*)' MSGLVL = ',USROP
      CALL TESTIT(IER)
      IER=XDFOPT('ERRTOLR','SYSTEM',-1)
      WRITE(6,333)56.0,' XDFOPN IUN=-13 '
c      IER = XDFOPN(-13,'CREATE')
      IER = XDFOPN(-13,'CREATE',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,*)' IER = ', IER
      CALL TESTIT(-IER)
      WRITE(6,333)56.1,' XDFOPN IUN=0 '
c      IER = XDFOPN(0,'CREATE')
      IER = XDFOPN(0,'CREATE',PRI,NPRI,AUX,NAUX,'TEST')
      WRITE(6,*)' IER = ', IER
      CALL TESTIT(-IER)
      WRITE(6,333) 57.0,'XDFOPN FICHIER 10 MODE R-W'
      IER = XDFOPN(10,'R-W',PRI,NPRI,AUX,NAUX,'TEST')
      CALL TESTIT(IER)
      WRITE(6,333) 57.1,'XDFCLS SANS MODIFICATIONS'
      IER = XDFCLS(10)
      CALL TESTIT(IER)
      WRITE(6,333) 57.2,'XDFOPN FICHIER 10 MODE R-W'
      IER = XDFOPN(10,'R-W',PRI,NPRI,AUX,NAUX,'TEST')
      CALL TESTIT(IER)
      WRITE(6,333) 57.3,'QDFMSIG DE TEST A bRp0'
      IER = QDFMSIG(10,'bRp0')
      CALL TESTIT(IER)
      WRITE(6,333) 57.4,'XDFSTA FICHIER 10'
      IER=XDFSTA(10,STAT,NSTAT,PRI2,NPRI2,AUX2,NAUX2,CVERS,CAPPLC)
      IER=XDFIMP(10,STAT,NSTAT,PRI2,AUX2,CVERS,CAPPLC)
      CALL TESTIT(IER)
      WRITE(6,333) 57.5,'XDFCLS AVEC MODIFICATION'
      IER = XDFCLS(10)
      CALL TESTIT(IER)
      WRITE(6,*)' ************** FIN DES TESTS ***************** '
333   FORMAT(' --- TEST ',F4.1,2X,A,' ---')
444   FORMAT(1X,A4,2X,A4)
3333  FORMAT(' NOMBRE D''ENREGISTREMENTS VALIDES : ',I6)
      STOP
      END
      SUBROUTINE TESTIT(IER)
      INTEGER IER
      IF( (IER.LT. 0))THEN
         WRITE(6,444) IER
         STOP
      ELSE 
         WRITE(6,555)
      ENDIF 
444   FORMAT(' <<< ERREUR >>> ,IER = ',I2)
555   FORMAT(' --- REUSSI ---')
      RETURN
      END
