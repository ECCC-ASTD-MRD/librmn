program f_whiteboard_test

#include "WhiteBoard.h"

character (len=37), dimension(30) :: keys, keys2
integer, external :: f_whiteboard_get_keys, f_whiteboard_bcst, f_whiteboard_get, f_whiteboard_put,f_whiteboard_new
integer status,int2
logical, dimension(10) :: bool,bool2
logical :: sbool2
character(len=WB_MAXSTRINGLENGTH) :: options
integer *8 W
character(len=128) restart_file

W=0
int2=123
call f_whiteboard_checkpoint_get_name(restart_file)
print *,'Restart file name =',trim(restart_file)
!call c_whiteboard_test
status=f_whiteboard_new(w)
print *,'w=',w,' status=',status
call f_whiteboard_verbosity(0)
print *,'======================='
options='io=o'
status = f_whiteboard_put(W,'input/f/o/P0',WB_FORTRAN_CHAR,len(options),options,0,0)
options='io=o ; timeflag=-'
status = f_whiteboard_put(W,'input/f/o/UU:-',WB_FORTRAN_CHAR,len(options),options,0,0)
options='io=o ; timeflag=+'
status = f_whiteboard_put(W,'input/f/o/UU:+',WB_FORTRAN_CHAR,len(options),options,0,0)
nval = f_whiteboard_get_keys(W,keys,size(keys),"   ")
print *,'nval=',nval
!call f_whiteboard_check(W,"    ",-1)
print *,'======================='
options='io=i'
status = f_whiteboard_put(W,'gem/f/i/P0',WB_FORTRAN_CHAR,len(options),options,0,0)
options='io=io ; timeflag=-'
status = f_whiteboard_put(W,'gem/f/i/UU:-',WB_FORTRAN_CHAR,len(options),options,0,0)
options='io=io ; timeflag=+'
status = f_whiteboard_put(W,'gem/f/i/UU:+',WB_FORTRAN_CHAR,len(options),options,0,0)
options='io=o'
status = f_whiteboard_put(W,'gem/f/i/DD',WB_FORTRAN_CHAR,len(options),options,0,0)
status = f_whiteboard_put(W,'gem/f/i/QR',WB_FORTRAN_CHAR,len(options),options,0,0)

print *,'============+=========='
options='input/f/   '
nval = f_whiteboard_get_keys(W,keys,size(keys),'   ')
print *,'nval=',nval,' for ',trim(options)
nval = f_whiteboard_get_keys(W,keys,size(keys),trim(options))
print *,'nval=',nval,' for ',trim(options)
nval = f_whiteboard_get_keys(W,keys,size(keys),trim(options))
print *,'nval=',nval,' for ',trim(options)
nval = f_whiteboard_get_keys(W,keys,size(keys),'input/f/   ')
print *,'nval=',nval,' for ',trim(options)
print *,'======================='
call f_whiteboard_check(W,options,-1)
print *,'======================='
call f_whiteboard_check(W,trim(options),-1)
print *,'======================='
call f_whiteboard_check(W,options,-1)
print *,'======================='

options='gem/f/   '
nval = f_whiteboard_get_keys(W,keys,size(keys),'gem/f/   ')
print *,'nval=',nval,' for ',trim(options)
nval = f_whiteboard_get_keys(W,keys,size(keys),options)
print *,'nval=',nval,' for ',trim(options)
call f_whiteboard_check(W,options,-1)
print *,'+=====================+'
status=f_whiteboard_get(W,"int_scalar   ",WB_FORTRAN_INT,4,int2,0)
print *,'STATUS=',status, 'int2=',int2
status=f_whiteboard_get(W,"bool_scalar   ",WB_FORTRAN_BOOL,1,sbool2,0)
print *,'STATUS=',status, 'sbool=',sbool2
call f_whiteboard_read(W,"pkg/   ","sample2.dict","mec_topo",2)
call f_whiteboard_check(W,"    ",-1)
nval = f_whiteboard_get_keys(W,keys,size(keys),"   ")
print *,'nval=',nval
print *,'+=====================+'
status=f_whiteboard_get(W,"bool_scalar",4,1,sbool2,0)
print *,'STATUS=',status, 'sbool=',sbool2
print *,'======================='
call f_whiteboard_read(W,"pkg2/   ","sample3.dict","mec_topo",2)
call f_whiteboard_check(W,"    ",-1)
nval = f_whiteboard_get_keys(W,keys,size(keys),"   ")
print *,'nval=',nval
print *,'======================='
call f_whiteboard_check(W,"    ",-1)
nval= f_whiteboard_lock(W,"")
print *,'nval=',nval
call f_whiteboard_check(W,"    ",512)
stop
int2=-9999
status=f_whiteboard_get(W,"pkg/npx   ",2,4,int2,0)
print *,'STATUS=',status, 'pkg/npx=',int2
print *,'======================='
call f_whiteboard_read(W,"pkg/","sample3.dict","mec_topo",0)
call f_whiteboard_check(W,"  ",-1)
int2=-9999
status=f_whiteboard_get(W,"pkg/npx    ",2,4,int2,0)
print *,'STATUS=',status, 'pkg/npx=',int2
int2=123
status=f_whiteboard_put(W,"pkg/npx   ",2,4,int2,0,0)
print *,'STATUS=',status
int2=-9999
status=f_whiteboard_get(W,"pkg/npx           ",2,4,int2,0)
print *,'STATUS=',status, 'pkg/npx=',int2
print *,'=== locking ========'
status=f_whiteboard_lock(W,"pkg/      ")
call f_whiteboard_check(W,"",-1)
print *,'======================='
stop

status=f_whiteboard_put(W,"bool_scalar",4,1,.true.,1,0)
print *,'STATUS=',status
sbool2=.false.
status=f_whiteboard_get(W,"bool_scalar",4,1,sbool2,1)
print *,'STATUS=',status, 'sbool=',sbool2

bool=(/.true.,.false.,.true.,.false.,.true.,.false.,.true.,.false.,.true.,.false./)
status=f_whiteboard_put(W,"bool_array",4,1,bool,10,0)
print *,'STATUS=',status
status=f_whiteboard_get(W,"bool_array",4,1,bool2,10)
print *,'STATUS=',status, 'bools=',bool2
keys(1)='string value no 1'
keys(2)='string value no 2'
keys(3)='string value no 3'
status=f_whiteboard_put(W,"strg_array",3,20,keys,3,0)
print *,'STATUS=',status

call c_whiteboard_test

status=f_whiteboard_get(W,"strg_array",3,20,keys2,3)
print *,'keys2=',keys2(1),keys2(2),keys2(3)
print *,'STATUS=',status
nval = f_whiteboard_get_keys(W,keys,size(keys),"")
print *,'number of keys =',nval
print *,keys(1:nval)
nval = f_whiteboard_bcst(W,"D",1)

call f_whiteboard_read(W,"pkg/","sample.dict","simple_scalar_ok",2)
call f_whiteboard_check(W,"",-1)
stop
end
