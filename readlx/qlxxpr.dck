*/* RMNLIB - Library of useful routines for C and FORTRAN programming
* * Copyright (C) 1975-2001  Division de Recherche en Prevision Numerique
* *                          Environnement Canada
* *
* * This library is free software; you can redistribute it and/or
* * modify it under the terms of the GNU Lesser General Public
* * License as published by the Free Software Foundation,
* * version 2.1 of the License.
* *
* * This library is distributed in the hope that it will be useful,
* * but WITHOUT ANY WARRANTY; without even the implied warranty of
* * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* * Lesser General Public License for more details.
* *
* * You should have received a copy of the GNU Lesser General Public
* * License along with this library; if not, write to the
* * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* * Boston, MA 02111-1307, USA.
* */
***S/P QLXXPR TRAITER UNE EXPRESSION ARITHMETIQUE OU LOGIQUE
      SUBROUTINE QLXXPR(ERR)
      LOGICAL ERR
#include "bufftok.cdk"


      PARAMETER (MAXTKNS=65,MAXOPS=30)
      INTEGER TOKENS(MAXTKNS), TOKTYPE(MAXTKNS), NTOKEN
      INTEGER NOPER
      CHARACTER *4 PILEOP(MAXOPS)
      LOGICAL UNARY, FINI, FIRST
      INTEGER PLEV, QLXPRI
      EXTERNAL QLXPRI
*
#if defined(Little_Endian)
      print *,'QLXXPR fatal error: not supported on this platform'
      stop
#endif
      INEXPR = .TRUE.
      NTOKEN = 0
      PLEV = 0
      BLEV = 0
      UNARY = .TRUE.
      ERR = .FALSE.
      FINI = .FALSE.
      FIRST = .TRUE.
      NOPER = 1
      PILEOP(1) = DOLLAR


      WHILE( .NOT.FINI .AND. NTOKEN.LT.MAXTKNS             _
             .AND. NOPER.LT.MAXOPS .AND. .NOT.ERR)$(
         IF(.NOT.FIRST) CALL QLXTOK
         FIRST = .FALSE.
         IF(TYPE.EQ.CLE)$(
            NTOKEN = NTOKEN + 1
            CALL QLXFND(TOKEN(1:8),LOCVAR,LOCCNT,LIMITES,ITYP)
            IF(ITYP.NE.0 .AND. ITYP.NE.1) ERR=.TRUE.
            TOKENS(NTOKEN) = LOCVAR
            TOKTYPE(NTOKEN) = LIMITES + 1
            IF(.NOT. UNARY) ERR=.TRUE.
            UNARY = .FALSE.
            $)
         ELSE IF(TYPE.EQ.ENTIER .OR. TYPE.EQ.REEL)$(
            NTOKEN = NTOKEN + 1
            TOKENS(NTOKEN) = JVAL
            TOKTYPE(NTOKEN) = 0
            IF(.NOT. UNARY) ERR=.TRUE.
            UNARY = .FALSE.
            $)
         ELSE IF(QLXPRI(TOKEN(1:4)).GT.0) $(     # OPERATEUR RECONNU
            IF(TOKEN(1:2).EQ.'( ')
               PLEV = PLEV + 1
            ELSE IF(TOKEN(1:2).EQ.') ')
               PLEV = PLEV - 1
            ELSE IF(TOKEN(1:2).EQ.'[ ')
               BLEV = BLEV + 1
            ELSE IF(TOKEN(1:2).EQ.'] ')
               BLEV = BLEV - 1
            IF(PLEV.LT.0 .OR. BLEV.LT.0) $(
               FINI = .TRUE.
               CALL QLXBAK(TOKEN(1:1))
               BREAK
               $)
            IF(UNARY) $(
               IF(TOKEN(1:2).EQ.'+ ')       TOKEN(1:2) = 'U+'
               ELSE IF(TOKEN(1:2).EQ.'- ') TOKEN(1:2) = 'U-'
               ELSE IF(TOKEN(1:2).NE.'( ' .AND. TOKEN(1:2).NE.'[ ') ERR=.TRUE.
               $)
            UNARY = TOKEN(1:1).NE.')' .AND. TOKEN(1:1).NE.']'
            CALL QLXRPN(TOKEN,TOKENS,MAXTKNS,NTOKEN,TOKTYPE,
                        PILEOP,MAXOPS,NOPER,ERR)
            $)
         ELSE IF(TOKEN(1:1).EQ.',' .OR. TOKEN(1:1).EQ.'$'
                                 .OR. TOKEN(1:2).EQ.':=') $( # TERMINATEUR
            CALL QLXRPN(DOLLAR,TOKENS,MAXTKNS,NTOKEN,TOKTYPE,
                        PILEOP,MAXOPS,NOPER,ERR)
            FINI = .TRUE.
            CALL QLXBAK(TOKEN(1:1))
            $)
         ELSE $(
            WRITE(6,'(A8,A)')TOKEN(1:8),' IS INVALID'
            ERR = .TRUE.
            $)
         $)
      IF (PLEV.GT.0 .OR. .NOT.FINI .OR. BLEV.GT.0
          .OR. NTOKEN.NE.1 ) ERR = .TRUE.
      INEXPR = .FALSE.


      IF(.NOT.ERR) $(
         TOKEN    = ' '
         JVAL     = TOKENS(1)
         IF(TOKTYPE(1).GT.0)
            TYPE = ADRESSE
         ELSE IF(ABS(JVAL).LE.MAXINT)
            TYPE = ENTIER
         ELSE
            TYPE = REEL
         $)
      IF(ERR)
         CALL QLXERR(81005,'QLXEXPR')
      RETURN
      END
