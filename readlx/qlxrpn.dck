*/* RMNLIB - Library of useful routines for C and FORTRAN programming
* * Copyright (C) 1975-2001  Division de Recherche en Prevision Numerique
* *                          Environnement Canada
* *
* * This library is free software; you can redistribute it and/or
* * modify it under the terms of the GNU Lesser General Public
* * License as published by the Free Software Foundation,
* * version 2.1 of the License.
* *
* * This library is distributed in the hope that it will be useful,
* * but WITHOUT ANY WARRANTY; without even the implied warranty of
* * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* * Lesser General Public License for more details.
* *
* * You should have received a copy of the GNU Lesser General Public
* * License along with this library; if not, write to the
* * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* * Boston, MA 02111-1307, USA.
* */
***S/P QLXRPN CONVERSION A NOTATION POSTFIXE
      SUBROUTINE QLXRPN(TOK,TOKENS,MAXTKNS,NTOKEN,TOKTYPE,
                        PILEOP,MAXOPS,NOPER,ERR)
      CHARACTER *(*) TOK
      INTEGER MAXTKNS,NTOKEN,MAXOPS,NOPER
      INTEGER TOKENS(MAXTKNS), TOKTYPE(MAXTKNS)
      EXTERNAL QLXPRI, QLXPRIL
      INTEGER  QLXPRI, QLXPRIL
      LOGICAL ERR
      CHARACTER *4 TOKEN
      CHARACTER *4 PILEOP(MAXOPS)


      IF(ERR)RETURN
      TOKEN = TOK
      IF(TOKEN.EQ.LPAREN .OR. TOKEN.EQ.LBRAK) $(
         NOPER = MIN(NOPER+1 , MAXOPS)
         PILEOP(NOPER) = TOKEN
         $)
      ELSE IF(TOKEN.EQ.RPAREN) $(
         WHILE(PILEOP(NOPER) .NE. LPAREN .AND. _
               PILEOP(NOPER) .NE. LBRAK  .AND. _
               PILEOP(NOPER) .NE. DOLLAR) $(
            CALL QLXOPR(TOKENS,NTOKEN,TOKTYPE,
                        MOD(QLXPRI(PILEOP(NOPER)),100),ERR)
            NOPER = NOPER - 1
            $)
         IF(PILEOP(NOPER).EQ.LPAREN)
            NOPER = NOPER-1
         ELSE
            ERR = .TRUE.
         $)
      ELSE IF(TOKEN.EQ.RBRAK) $(
         WHILE(PILEOP(NOPER) .NE. LPAREN .AND. _
               PILEOP(NOPER) .NE. LBRAK  .AND. _
               PILEOP(NOPER) .NE. DOLLAR) $(
            CALL QLXOPR(TOKENS,NTOKEN,TOKTYPE,
                        MOD(QLXPRI(PILEOP(NOPER)),100),ERR)
            NOPER = NOPER - 1
            $)
         IF(PILEOP(NOPER).EQ.LBRAK) $(
            CALL QLXOPR(TOKENS,NTOKEN,TOKTYPE,
                        MOD(QLXPRI(RBRAK),100),ERR)
            NOPER = NOPER-1
            $)
         ELSE
            ERR = .TRUE.
         $)
      ELSE IF(TOKEN.EQ.DOLLAR) $(
         WHILE(PILEOP(NOPER) .NE. LPAREN .AND. _
               PILEOP(NOPER) .NE. LBRAK  .AND. _
               PILEOP(NOPER) .NE. DOLLAR) $(
            CALL QLXOPR(TOKENS,NTOKEN,TOKTYPE,
                        MOD(QLXPRI(PILEOP(NOPER)),100),ERR)
            NOPER = NOPER - 1
            $)
         IF(PILEOP(NOPER).EQ.DOLLAR) $(
            NOPER = NOPER-1
            $)
         ELSE
            ERR = .TRUE.
         $)
      ELSE $(
         WHILE(QLXPRIL(PILEOP(NOPER)).GT.QLXPRI(TOKEN))$(
            CALL QLXOPR(TOKENS,NTOKEN,TOKTYPE,
                        MOD(QLXPRI(PILEOP(NOPER)),100),ERR)
            NOPER = NOPER -1
            $)
         NOPER = MIN(NOPER+1 , MAXOPS)
         PILEOP(NOPER) = TOKEN
         $)


      RETURN
      END
