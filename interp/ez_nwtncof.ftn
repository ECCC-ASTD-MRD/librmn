
* * Copyright (C) 1975-2001  Division de Recherche en Prevision Numerique
* *                          Environnement Canada
* *
* * This library is free software; you can redistribute it and/or
* * modify it under the terms of the GNU Lesser General Public
* * License as published by the Free Software Foundation,
* * version 2.1 of the License.
* *
* * This library is distributed in the hope that it will be useful,
* * but WITHOUT ANY WARRANTY; without even the implied warranty of
* * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* * Lesser General Public License for more details.
* *
* * You should have received a copy of the GNU Lesser General Public
* * License along with this library; if not, write to the
* * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
* * Boston, MA 02111-1307, USA.
* */
      integer function ez_nwtncof(cx,cy,ax,ay,ni,nj,i1,i2,j1,j2,extension)
********
*     Auteur: Y. Chartier, drpn
*     Fevrier 1991
*     
*Objet:  Calcul de coefficients uti1ises dans la forme newtonienne
*        de l'interpolation de Lagrange.
*
**************************************************************
*   -----*-------------*------#------*----------*------->
*        x1            x2     x      x3         x4
*
**************************************************************
*     cx(i,1) = 1.0 / (x2-x1)
*     cx(i,2) = 1.0 / (x3-x1)
*     cx(i,3) = 1.0 / (x3-x2)
*     cx(i,4) = 1.0 / (x4-x1)
*     cx(i,5) = 1.0 / (x4-x2)
*     cx(i,6) = 1.0 / (x4-x3)
*
*     structure identique pour cy(j,1..6)

********
      implicit none
          
      integer ni,nj,i1,i2,j1,j2,extension
      real x1,x2,x3,x4
      integer limite,imoins1,iplus1,iplus2,wrap
      real cx(ni,6),cy(j1:j2,6),ax(ni),ay(j1:j2)
      
      integer i,j
      

      do i=1,ni
         do j=1,6
            cx(i,j) = 1.0
         enddo
      enddo
      
      do i=1,6
         do j=j1,j2
            cy(j,i) = 1.0
         enddo
      enddo
      
      do i=2,ni-2
         if ((ax(i  ) - ax(i-1)).eq.0.0)  goto 999
         if ((ax(i+1) - ax(i-1)).eq.0.0)  goto 999
         if ((ax(i+1) - ax(i  )).eq.0.0)  goto 999
         if ((ax(i+2) - ax(i-1)).eq.0.0)  goto 999
         if ((ax(i+2) - ax(i  )).eq.0.0)  goto 999
         if ((ax(i+2) - ax(i+1)).eq.0.0)  goto 999
      enddo
      
      do j=2,nj-2
         if ((ay(j  ) - ay(j-1)).eq.0.0)  goto 998
         if ((ay(j+1) - ay(j-1)).eq.0.0)  goto 998
         if ((ay(j+1) - ay(j  )).eq.0.0)  goto 998
         if ((ay(j+2) - ay(j-1)).eq.0.0)  goto 998
         if ((ay(j+2) - ay(j  )).eq.0.0)  goto 998
         if ((ay(j+2) - ay(j+1)).eq.0.0)  goto 998
      enddo

      do 10 i=2,ni-2
         cx(i,1) = 1. / (ax(i  ) - ax(i-1))
         cx(i,2) = 1. / (ax(i+1) - ax(i-1))
         cx(i,3) = 1. / (ax(i+1) - ax(i  ))
         cx(i,4) = 1. / (ax(i+2) - ax(i-1))
         cx(i,5) = 1. / (ax(i+2) - ax(i  ))
         cx(i,6) = 1. / (ax(i+2) - ax(i+1))
 10   continue
      
      do 20 j=j1+1,j2-2
         cy(j,1) = 1. / (ay(j  ) - ay(j-1))
         cy(j,2) = 1. / (ay(j+1) - ay(j-1))
         cy(j,3) = 1. / (ay(j+1) - ay(j  ))
         cy(j,4) = 1. / (ay(j+2) - ay(j-1))
         cy(j,5) = 1. / (ay(j+2) - ay(j  ))
         cy(j,6) = 1. / (ay(j+2) - ay(j+1))
 20   continue
      

      if (extension.eq.1) then
         x1 = ax(1) - (ax(ni) - ax(ni-1))
         x2 = ax(1)
         x3 = ax(2)
         x4 = ax(3)
         
         if ((x2-x1).eq.0.0)  goto 997
         if ((x3-x1).eq.0.0)  goto 997
         if ((x3-x2).eq.0.0)  goto 997
         if ((x4-x1).eq.0.0)  goto 997
         if ((x4-x2).eq.0.0)  goto 997
         if ((x4-x3).eq.0.0)  goto 997

         cx(1,1) = 1. / (x2-x1)
         cx(1,2) = 1. / (x3-x1)
         cx(1,3) = 1. / (x3-x2)
         cx(1,4) = 1. / (x4-x1)
         cx(1,5) = 1. / (x4-x2)
         cx(1,6) = 1. / (x4-x3)
         
         x1 = ax(ni-2)
         x2 = ax(ni-1)
         x3 = ax(ni)
         x4 = ax(ni) + (ax(2)-ax(1))
         
         if ((x2-x1).eq.0.0)  goto 997
         if ((x3-x1).eq.0.0)  goto 997
         if ((x3-x2).eq.0.0)  goto 997
         if ((x4-x1).eq.0.0)  goto 997
         if ((x4-x2).eq.0.0)  goto 997
         if ((x4-x3).eq.0.0)  goto 997

         cx(ni-1,1) = 1. / (x2-x1)
         cx(ni-1,2) = 1. / (x3-x1)
         cx(ni-1,3) = 1. / (x3-x2)
         cx(ni-1,4) = 1. / (x4-x1)
         cx(ni-1,5) = 1. / (x4-x2)
         cx(ni-1,6) = 1. / (x4-x3)
      endif

      if (extension.eq.2) then
         x1 = ax(1) - (360.0 - ax(ni))
         x2 = ax(1)
         x3 = ax(2)
         x4 = ax(3)
         
         if ((x2-x1).eq.0.0)  goto 997
         if ((x3-x1).eq.0.0)  goto 997
         if ((x3-x2).eq.0.0)  goto 997
         if ((x4-x1).eq.0.0)  goto 997
         if ((x4-x2).eq.0.0)  goto 997
         if ((x4-x3).eq.0.0)  goto 997

         cx(1,1) = 1. / (x2-x1)
         cx(1,2) = 1. / (x3-x1)
         cx(1,3) = 1. / (x3-x2)
         cx(1,4) = 1. / (x4-x1)
         cx(1,5) = 1. / (x4-x2)
         cx(1,6) = 1. / (x4-x3)
         
         x1 = ax(ni-2)
         x2 = ax(ni-1)
         x3 = ax(ni)
         x4 = ax(1) + 360.0
         
         if ((x2-x1).eq.0.0)  goto 997
         if ((x3-x1).eq.0.0)  goto 997
         if ((x3-x2).eq.0.0)  goto 997
         if ((x4-x1).eq.0.0)  goto 997
         if ((x4-x2).eq.0.0)  goto 997
         if ((x4-x3).eq.0.0)  goto 997
         
         cx(ni-1,1) = 1. / (x2-x1)
         cx(ni-1,2) = 1. / (x3-x1)
         cx(ni-1,3) = 1. / (x3-x2)
         cx(ni-1,4) = 1. / (x4-x1)
         cx(ni-1,5) = 1. / (x4-x2)
         cx(ni-1,6) = 1. / (x4-x3)

         x1 = ax(ni-1)
         x2 = ax(ni)
         x3 = ax(1)+360.0
         x4 = ax(2)+360.0
         
         if ((x2-x1).eq.0.0)  goto 997
         if ((x3-x1).eq.0.0)  goto 997
         if ((x3-x2).eq.0.0)  goto 997
         if ((x4-x1).eq.0.0)  goto 997
         if ((x4-x2).eq.0.0)  goto 997
         if ((x4-x3).eq.0.0)  goto 997
         
         cx(ni,1) = 1. / (x2-x1)
         cx(ni,2) = 1. / (x3-x1)
         cx(ni,3) = 1. / (x3-x2)
         cx(ni,4) = 1. / (x4-x1)
         cx(ni,5) = 1. / (x4-x2)
         cx(ni,6) = 1. / (x4-x3)
      endif
      ez_nwtncof = 0
      return
      
 999  print *, 'Probleme detecte dans EZ_NWTNCOF code 999'
      do i=1,ni
         print *, '(EZ_NWTNCOF)', i,  ax(i)
      enddo
      print *, 'EZ_NWTNCOF CALL EXIT'
      ez_nwtncof = -1

 998  print *, 'Probleme detecte dans EZ_NWTNCOF code 998'
      do j=1,nj
         print *, '(EZ_NWTNCOF)', j,  ay(j)
      enddo
      print *, 'EZ_NWTNCOF CALL EXIT'
      ez_nwtncof = -1
      
 997  print *, 'Probleme detecte dans EZ_NWTNCOF code 998'
      print *, '(EZ_NWTNCOF) Probleme : x1..x4  : ', x1, x2, x3, x4
      print *, 'EZ_NWTNCOF CALL EXIT'
      ez_nwtncof = -1
      
      return 
      end
      
*********************************************************************
***
***

