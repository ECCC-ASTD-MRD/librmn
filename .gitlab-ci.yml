variables:
   GIT_SUBMODULE_STRATEGY: recursive
   ORD_SOUMET_W: "10"
   ORD_SOUMET_C: "4"
   ORD_SOUMET_M: "8G"
   ORD_SOUMET_TMPFS: "1G"
   ECCI_TRIGGER_FSTTOOLS: a1bf9df63799d00ea5acd683d28e8f
   ECCI_TRIGGER_VGRID   : 97db9f3ad91882b866da2ec8bf4f4b

stages:
   - build
   - test
   - package
   - deploy
   - trigger

before_script:
   # Force color CMake output even when output is not TTY
   - export CLICOLOR_FORCE=true
   - if [[ ${CI_COMMIT_REF_NAME} == "dev" && ${ECCI_PROCESS} != "nightly" ]]; then ECCI_PROCESS="dev"; fi

#build_gpsc:
#  stage: build
#  script: ssh eccc-gpsc1.science.gc.ca $CI_PROJECT_DIR/ci_build $CI_PROJECT_DIR
#  only:
#    - master
#    - dev


build:amd64-gnu-9.3.0:
   stage: build
   only:
#      - master
#      - dev
#      - tags
   script:
      - source ci-env/latest/profile.sh
      - . r.env.dot --arch amd64
      - . ssmuse-sh -x main/opt/gcc/gcc-9.3.0/gcc_9.3.0_ubuntu-18.04-amd64-64
      - . r.load.dot rpn/code-tools/1.5.6
      - . /fs/ssm/main/opt/intelcomp/master/inteloneapi_2022.1.2_multi/oneapi/mpi/latest/env/vars.sh
      - mkdir build_amd64-gnu-9.3.0
      - cd build_amd64-gnu-9.3.0
      - cmake ../
      - time make -j $NCPUS
   artifacts:
      expire_in: 2 hrs
      paths:
         - build_amd64-gnu-9.3.0

build:icelake-gnu-12.1.0:
   stage: build
   only:
#      - master
#      - dev
#      - tags
   script:
      - source ci-env/latest/profile.sh
      - export MODULEPATH=~sidr000/modules:$MODULEPATH
      - module load gcc12
      - export EC_ARCH=rhel-8-icelake-64/gnu-12.1.0
      - echo "========================================================="
      - env | sort
      - echo "========================================================="
      # Loading the compiler via SSM or r.load.dot does not
      # set EC_ARCH, so we set it manually
      - mkdir build_icelake-gnu-12.1.0
      - cd build_icelake-gnu-12.1.0
      - cmake ../
      - time make -j $NCPUS
   artifacts:
      expire_in: 2 hrs
      paths:
         - build_icelake-gnu-12.1.0

build:icelake-inteloneapi-2022.1.2:
   stage: build
   only:
#      - master
#      - dev
#      - tags
   script:
      - source ci-env/latest/profile.sh
      - . r.load.dot /fs/ssm/eccc/mrd/rpn/code-tools/ENV/cdt-1.5.7-inteloneapi-2022.1.2
      - echo "========================================================="
      - env | sort
      - echo "========================================================="
      # Loading the compiler via SSM or r.load.dot does not
      # set EC_ARCH, so we set it manually
      - mkdir build_icelake-inteloneapi-2022.1.2
      - cd build_icelake-inteloneapi-2022.1.2
      - cmake ../
      - time make -j $NCPUS
   artifacts:
      expire_in: 2 hrs
      paths:
         - build_icelake-inteloneapi-2022.1.2

build:amd64-inteloneapi-2022.1.2:
   stage: build
   only:
#      - master
#      - dev
#      - tags
   script:
      - source ci-env/latest/profile.sh
      - . r.env.dot --arch amd64
      - . r.load.dot /fs/ssm/eccc/mrd/rpn/code-tools/ENV/cdt-1.5.7-inteloneapi-2022.1.2
      - echo "========================================================="
      - env | sort
      - echo "========================================================="
      # Loading the compiler via SSM or r.load.dot does not
      # set EC_ARCH, so we set it manually
      - mkdir build_amd64-inteloneapi-2022.1.2
      - cd build_amd64-inteloneapi-2022.1.2
      - cmake ../
      - time make -j $NCPUS
   artifacts:
      expire_in: 2 hrs
      paths:
         - build_amd64-inteloneapi-2022.1.2


#test:icelake-intel-19.0.3:
#   stage: test
#   only:
#      - master
#      - dev
#   script:
#      - source ci-env/latest/ubuntu-18.04-amd-64/intel-19.0.3.199.sh
#      - cd build_icelake-intel-19.0.3
#      - make check

#test:amd-gnu-7.4.0:
#   stage: test
#   only:
#      - master
#      - dev
#   script:
#      - source ci-env/latest/ubuntu-18.04-amd-64/gnu-7.4.0.sh
#      - cd build_amd-gnu-7.4.0
#      - make check


package:amd64-gnu-9.3.0:
   stage: package
   only:
      - master
      - dev
      - tags
      - schedules
   dependencies:
      - build:amd64-gnu-9.3.0
   environment:
      name: testing
   script:
      - set +e
      - source ci-env/latest/rhel-8-amd-64/gnu-9.3.0.sh
      - set -e
      - cd build_amd64-gnu-9.3.0
      - make package
      - ~/ci-admin-bundle/bin/ci-package-ssm.sh package ${ECCI_PROCESS}

package:icelake-inteloneapi-2022.1.2:
   stage: package
   only:
      - master
      - dev
      - tags
      - schedules
   dependencies:
      - build:icelake-inteloneapi-2022.1.2
   environment:
      name: testing
   script:
      - set +e
      - source ci-env/latest/rhel-8-icelake-64/inteloneapi-2022.1.2.sh
      - set -e
      - cd build_icelake-inteloneapi-2022.1.2
      - make package
      - ~/ci-admin-bundle/bin/ci-package-ssm.sh package ${ECCI_PROCESS}

package:amd64-inteloneapi-2022.1.2:
   stage: package
   only:
      - master
      - dev
      - tags
      - schedules
   dependencies:
      - build:amd64-inteloneapi-2022.1.2
   environment:
      name: testing
   script:
      - set +e
      - source ci-env/latest/rhel-8-amd-64/inteloneapi-2022.1.2.sh
      - set -e
      - cd build_amd64-inteloneapi-2022.1.2
      - make package
      - ~/ci-admin-bundle/bin/ci-package-ssm.sh package ${ECCI_PROCESS}

deploy:staging:
   stage: deploy
   only:
      - master
      - tags
   except:
      -schedules
   script:
      - source ci-env/latest/profile.sh
      - ~/ci-admin-bundle/bin/ci-stage-ssm.sh libs rmn ${CI_COMMIT_TAG} ${ECCI_PROCESS}

deploy:dev:
   stage: deploy
   only:
      - dev
   except:
      - tags
   script:
      - ~/ci-admin-bundle/bin/ci-stage-ssm.sh libs rmn ${CI_COMMIT_REF_NAME} ${ECCI_PROCESS}

trigger:
   stage: trigger
   only:
      - master
      - dev
      - tags
      - schedules
   script:
      - curl -X POST -F token=${ECCI_TRIGGER_FSTTOOLS} -F ref=dev -F variables[EC_TRIGGER]=${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}:${CI_BUILD_REF} -F variables[ECCI_PROCESS]=${ECCI_PROCESS} https://gitlab.science.gc.ca/api/v4/projects/6032/trigger/pipeline
      - curl -X POST -F token=${ECCI_TRIGGER_VGRID}    -F ref=dev -F variables[EC_TRIGGER]=${CI_PROJECT_PATH}:${CI_BUILD_REF_NAME}:${CI_BUILD_REF} -F variables[ECCI_PROCESS]=${ECCI_PROCESS} https://gitlab.science.gc.ca/api/v4/projects/114/trigger/pipeline
